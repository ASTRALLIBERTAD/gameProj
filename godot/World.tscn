[gd_scene load_steps=10 format=3 uid="uid://d2oibegpqmv2b"]

[ext_resource type="Texture2D" uid="uid://eao47njq38uu" path="res://Assets/brackeys_platformer_assets/brackeys_platformer_assets/sprites/world_tileset.png" id="1_cy2ln"]
[ext_resource type="PackedScene" uid="uid://v2h65dti34ep" path="res://Collectibles/coin.tscn" id="3_q1b1f"]
[ext_resource type="PackedScene" uid="uid://cf1y4gylaktvs" path="res://TouchControls.tscn" id="4_dd45r"]
[ext_resource type="PackedScene" uid="uid://bpi3sbit45l5" path="res://Player/players.tscn" id="4_dqyd3"]
[ext_resource type="Script" path="res://FpsCounter.gd" id="5_dged2"]
[ext_resource type="Texture2D" uid="uid://djo53ep2hv88p" path="res://icon.svg" id="7_6ip7a"]

[sub_resource type="GDScript" id="GDScript_ixdq0"]
script/source = "extends Node2D

@export var nose_height: NoiseTexture2D 
var noise : Noise
var width: int = 200
var height: int = 200

const CHUNK_SIZE = 32
const VIEW_DISTANCE = 4  # Number of chunks to load in each direction
const UPDATE_THRESHOLD = 8
const CHUNK_UPDATE_INTERVAL = 0.2  # Seconds between chunk updates

@onready var tile_set = $TileMap

var source_id = 0
var land = Vector2(0, 1)
var water = Vector2(4, 10)
var loaded_chunks = {}  # Dictionary to track loaded chunks
var last_update_pos = Vector2.ZERO

var chunk_queue = []  # Queue of chunks to process
var chunk_timer = 0.0
var is_processing_chunks = false

func _ready() -> void:
	noise = nose_height.noise
	$AutoSave.start()
	last_update_pos = $PLAYERS.global_position
	update_chunks(get_chunk_coord(last_update_pos))

func should_update_chunks() -> bool:
	var current_pos = $PLAYERS.global_position
	var distance = last_update_pos.distance_to(current_pos)
	return distance > UPDATE_THRESHOLD

func get_chunk_coord(world_pos: Vector2) -> Vector2:
	return Vector2(
		floor(world_pos.x / CHUNK_SIZE),
		floor(world_pos.y / CHUNK_SIZE)
	)

func generate_chunk(chunk_pos: Vector2):
	var chunk_start = chunk_pos * CHUNK_SIZE
	for x in range(CHUNK_SIZE):
		for y in range(CHUNK_SIZE):
			var world_x = chunk_start.x + x
			var world_y = chunk_start.y + y
			var noise_val = noise.get_noise_2d(world_x, world_y)
			if noise_val > 0.0:
				tile_set.set_cell(0, Vector2(world_x, world_y), source_id, land)
			else:
				tile_set.set_cell(0, Vector2(world_x, world_y), source_id, water)
	print(\"Generated chunk at: \", chunk_pos)

func unload_chunk(chunk_pos: Vector2):
	var chunk_start = chunk_pos * CHUNK_SIZE
	for x in range(CHUNK_SIZE):
		for y in range(CHUNK_SIZE):
			var world_x = chunk_start.x + x
			var world_y = chunk_start.y + y
			tile_set.erase_cell(0, Vector2(world_x, world_y))
	loaded_chunks.erase(chunk_pos)
	print(\"Unloaded chunk at: \", chunk_pos)

func update_chunks(player_chunk_pos: Vector2):
	var chunks_to_load = []
	for x in range(-VIEW_DISTANCE, VIEW_DISTANCE + 1):
		for y in range(-VIEW_DISTANCE, VIEW_DISTANCE + 1):
			chunks_to_load.append(player_chunk_pos + Vector2(x, y))
	for chunk_pos in loaded_chunks.keys():
		if not chunk_pos in chunks_to_load:
			unload_chunk(chunk_pos)
	
	# Queue new chunks for loading
	for chunk_pos in chunks_to_load:
		if not loaded_chunks.has(chunk_pos):
			chunk_queue.append(chunk_pos)
	print(\"Chunks to load: \", chunks_to_load)

func _process(delta: float) -> void:
	chunk_timer += delta
	if should_update_chunks():
		var player_pos = $PLAYERS.global_position
		last_update_pos = player_pos
		update_chunks(get_chunk_coord(player_pos))
	
	# Process one chunk per frame if timer allows
	if chunk_timer >= CHUNK_UPDATE_INTERVAL and chunk_queue.size() > 0:
		process_next_chunk()
		chunk_timer = 0.0
	var tile_cord = player_cord()
	$Cord.text = \"(%d,%d)\" % [tile_cord.x, tile_cord.y]

func process_next_chunk():
	if chunk_queue.size() == 0:
		return
	
	var chunk_pos = chunk_queue.pop_front()
	var player_chunk = get_chunk_coord($PLAYERS.global_position)

    
    # Unload if too far
    if distance > VIEW_DISTANCE + 1:
        if loaded_chunks.has(chunk_pos):
            unload_chunk(chunk_pos)
    # Load if not loaded
    elif not loaded_chunks.has(chunk_pos) and distance <= VIEW_DISTANCE:
        generate_chunk(chunk_pos)
        loaded_chunks[chunk_pos] = true

func _on_save_pressed() -> void:
    var date = str(Time.get_datetime_string_from_system())
    date = date.replace(\":\", \"-\")

func _on_auto_save_timeout() -> void:
    SaveManager.auto_save()
    pass # Replace with function body.

func player_cord():
    var cord = $TileMap.local_to_map($PLAYERS.global_position)
    var local_position = $TileMap.to_local(cord)
    return local_position
    pass

func _on_button_pressed(name) -> void:
    SaveManager.save_game(name)

func _on_loading_pressed() -> void:
    var lod = SaveManagerRust.new()
    lod.load_player_pos(\"pk\",%PLAYERS )
    lod.print_world_name()
    pass
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_51jcw"]
texture = ExtResource("1_cy2ln")
0:1/0 = 0
4:10/0 = 0

[sub_resource type="TileSet" id="TileSet_goddv"]
sources/0 = SubResource("TileSetAtlasSource_51jcw")

[node name="World" type="Node2D"]
position = Vector2(-1, 0)
script = SubResource("GDScript_ixdq0")

[node name="TileMap" type="TileMapLayer" parent="."]
tile_set = SubResource("TileSet_goddv")

[node name="coin" parent="." instance=ExtResource("3_q1b1f")]
position = Vector2(65, 0)

[node name="coin2" parent="." instance=ExtResource("3_q1b1f")]
position = Vector2(123, 0)

[node name="PLAYERS" parent="." instance=ExtResource("4_dqyd3")]
unique_name_in_owner = true
position = Vector2(0, 25)

[node name="coin3" parent="." instance=ExtResource("3_q1b1f")]
position = Vector2(42.1139, 9.49407)

[node name="coin4" parent="." instance=ExtResource("3_q1b1f")]
position = Vector2(88, 20)

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
metadata/_edit_use_anchors_ = true

[node name="TouchControls" parent="Control" instance=ExtResource("4_dd45r")]

[node name="MultiplayerSpawner" type="MultiplayerSpawner" parent="."]
spawn_path = NodePath("..")

[node name="AutoSave" type="Timer" parent="."]
wait_time = 5.0
autostart = true

[node name="FPSCOUNTER" type="Label" parent="."]
texture_filter = 1
offset_top = 26.0
offset_right = 40.0
offset_bottom = 49.0
script = ExtResource("5_dged2")

[node name="Player2" type="Player" parent="."]
position = Vector2(-108, -52.5)
scale = Vector2(0.1875, 0.179688)
texture = ExtResource("7_6ip7a")

[node name="Cord" type="Label" parent="."]
offset_right = 40.0
offset_bottom = 23.0

[node name="Button" type="Button" parent="."]
offset_left = 25.0
offset_top = 45.0
offset_right = 68.0
offset_bottom = 76.0
text = "save"

[node name="SaveManagerRust" type="SaveManagerRust" parent="."]

[node name="loading" type="Button" parent="."]
offset_left = -87.0
offset_top = 55.0
offset_right = -21.0
offset_bottom = 86.0
text = "loading"

[connection signal="timeout" from="AutoSave" to="." method="_on_auto_save_timeout"]
[connection signal="pressed" from="Button" to="." method="_on_button_pressed"]
[connection signal="pressed" from="loading" to="." method="_on_loading_pressed"]
